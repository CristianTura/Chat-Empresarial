{"ast":null,"code":"var _jsxFileName = \"/home/pc/Escritorio/Programate/Chat-Empresarial/frontend/src/Routes/PublicRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, Route } from \"react-router-dom\";\nimport useAuth from \"../Components/Auth/useAuth\";\nimport routes from './Routers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = props => {\n  _s();\n\n  const {\n    isLogged\n  } = useAuth();\n  if (isLogged()) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: routes.chats\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Route, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PublicRoute, \"CaSOYmzem7Phwa2MMG8LvjgzEko=\", false, function () {\n  return [useAuth];\n});\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/home/pc/Escritorio/Programate/Chat-Empresarial/frontend/src/Routes/PublicRoute.js"],"names":["Redirect","Route","useAuth","routes","PublicRoute","props","isLogged","chats"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAaJ,OAAO,EAA1B;AACA,MAAGI,QAAQ,EAAX,EAAe,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAEH,MAAM,CAACI;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,sBACI;AAAA,2BACI,QAAC,KAAD,OAAWF;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARD;;GAAMD,W;UACiBF,O;;;KADjBE,W;AAUN,eAAeA,WAAf","sourcesContent":["import { Redirect, Route } from \"react-router-dom\";\nimport useAuth from \"../Components/Auth/useAuth\"\nimport routes from './Routers'\n\nconst PublicRoute = (props) => {\n    const {isLogged} = useAuth();\n    if(isLogged()) return <Redirect to={routes.chats}/>\n    return (\n        <div>\n            <Route {...props}/>\n        </div>\n    )\n}\n\nexport default PublicRoute\n"]},"metadata":{},"sourceType":"module"}